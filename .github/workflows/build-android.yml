name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allow manual trigger

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 34
        build-tools: 34.0.0
        ndk-version: '25.1.8937393'

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Cache Node modules
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install npm dependencies
      run: npm ci

    - name: Create dummy Google Services JSON (for build)
      run: |
        mkdir -p android/app
        cat > android/app/google-services.json << 'EOF'
        {
          "project_info": {
            "project_number": "123456789",
            "project_id": "dummy-project-id"
          },
          "client": [
            {
              "client_info": {
                "mobilesdk_app_id": "1:123456789:android:dummy",
                "android_client_info": {
                  "package_name": "com.minihabittracker"
                }
              },
              "oauth_client": [],
              "api_key": [
                {
                  "current_key": "AIzaSyDummyKeyForBuildOnly1234567890123456"
                }
              ],
              "services": {
                "appinvite_service": {
                  "other_platform_oauth_client": []
                }
              }
            }
          ],
          "configuration_version": "1"
        }
        EOF

    - name: Make Gradlew executable
      run: chmod +x android/gradlew

    - name: Clean build
      run: |
        cd android
        ./gradlew clean

    - name: Build Android APK
      run: |
        cd android
        ./gradlew assembleDebug --no-daemon --stacktrace

    - name: Upload APK as artifact
      uses: actions/upload-artifact@v4
      with:
        name: mini-habit-tracker-debug
        path: android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30

    - name: Create Release (on main branch push)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: build-${{ github.run_number }}
        release_name: Mini Habit Tracker Build ${{ github.run_number }}
        body: |
          ðŸš€ **Mini Habit Tracker APK - Build ${{ github.run_number }}**
          
          ## âœ¨ Latest Features
          - âœ… Unclick functionality for habit level selections
          - âœ… Cross-platform support (Firebase + Local storage)
          - âœ… Comprehensive test coverage
          - âœ… Optimized APK size and security improvements
          
          ## ðŸ“± Installation
          1. Download the APK below
          2. Enable "Install from unknown sources" on your Android device
          3. Install the APK file
          
          ## ðŸ§ª Testing
          - Test the new unclick feature: tap a habit level, then tap the same level again to unclick
          - Try guest mode and authenticated mode
          - Create habits and test all three interaction modes
          
          **Commit:** ${{ github.sha }}
          **Build Date:** ${{ github.event.head_commit.timestamp }}
        draft: false
        prerelease: false

    - name: Upload APK to Release
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: android/app/build/outputs/apk/debug/app-debug.apk
        asset_name: mini-habit-tracker-v${{ github.run_number }}.apk
        asset_content_type: application/vnd.android.package-archive

  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test -- --coverage --watchAll=false

    - name: Upload test coverage
      uses: codecov/codecov-action@v4
      with:
        file: coverage/lcov.info
        fail_ci_if_error: false